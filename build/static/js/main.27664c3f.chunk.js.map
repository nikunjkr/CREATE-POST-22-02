{"version":3,"sources":["api/index.js","actions/Posts.js","logo.png","components/CreatePost/styles.js","components/CreatePost/CreatePost.js","components/PleaseLogin.js","App.js","reducers/Posts.js","reducers/Comments.js","reducers/Thread.js","reducers/User.js","reducers/index.js","index.js"],"names":["API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","Cookies","get","addPost","formData","post","dispatch","a","api","data","console","log","type","payload","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","button","marginBottom","CreatePost","useState","Title","Caption","myFile","postData","setPostData","useDispatch","classes","useStyles","clear","FileReader","onload","document","getElementById","src","setPosted","posted","handleSubmit","e","preventDefault","FormData","append","Paper","className","autoComplete","noValidate","onSubmit","TextField","name","variant","label","fullWidth","value","onChange","target","multiline","rows","files","reader","result","readAsDataURL","id","height","alt","Button","color","size","onClick","PleaseLogin","App","useEffect","href","logo","reducer","Posts","action","Comments","Thread","User","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.27664c3f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nconst API = axios.create({ baseURL: 'https://ec2-52-206-109-241.compute-1.amazonaws.com/team2practo' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n//   if (localStorage.getItem('profile')) {\r\n    // req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n    // Cookies.set('access_control_token_cookie_skinder','eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzkxMDM4OCwiZXhwIjoxNjEzOTEzOTg4fQ.gvCiEuhs5GsYNBXKdgq95owI0X-2XvaoeRhhT2jZadA')\r\n     req.headers.Authorization = Cookies.get('access_control_token_cookie_skinder');\r\n    // req.headers.Authorization = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzgzNDg4MCwiZXhwIjoxNjEzODM4NDgwfQ.76-J-3veuHiZU2y3-o6S5s4YAAWbVWolaRt-0WGIHVg\";\r\n//   }\r\n\r\n  return req;\r\n});\r\n\r\n\r\n// export const fetchPosts = () => fetch(url).then(res => res.json())\r\nexport const fetchPosts = () => API.get('/posts');\r\n// export const fetchPosts = () => axios.get(`${url}/posts`');\r\n// export const fetchPostDetails = (postid) => API.get(`${url}/`)\r\nexport const upvoteComment = (comment_id, updown) => API.put('/comments/uord', {'comment_id':comment_id,\r\n    'upordown':updown});\r\n    \r\nexport const getPostComments= (postid) => API.get(`/${postid}/comments`);\r\n\r\n// export const downvoteComment = (comment_id) => API.put('/comments/uord', {'comment_id':comment_id,\r\n//     'upordown':'d'});\r\nexport const createComment =(postid,Comment) => API.post('/comments', {'post_id': postid, 'comment' : Comment});\r\nexport const replyComment =(postid,Comment,up_level_cid) => API.post('/comments', {'post_id': postid, 'comment' : Comment, 'up_level_cid' :up_level_cid});\r\n//  forgot / in beginning\r\nexport const getThread = (comment_id) => API.get(`/comments/${comment_id}/thread`);\r\nexport const getUser =() => API.get(`/users`);\r\n \r\n// export const addPost = (Title,Caption,myFile) => \r\n   \r\n//     API.post('/posts', {'Title':Title, 'Caption':Caption, 'myFile':myFile });\r\n    export const addPost = (formData) =>  API.post('/posts', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }});\r\n\r\n","import * as api from \"../api/index.js\";\r\n\r\n// action creaters return actions\r\n// default keyword showed error\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.fetchPosts();\r\n        // console.log(data,\"secret\");\r\n        dispatch({type:'FETCH_ALL' , payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n// return actions;\r\n}\r\nexport const getPostComments = (post_id) => async (dispatch) => {\r\n    try{\r\n        const {data} =await api.getPostComments(post_id);\r\n        console.log(\"call\", data);\r\n        dispatch({type:'GET_POST_COMMENTS', payload: data});\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\nexport const createComment = (postid,comment) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComment(postid,comment);\r\n    console.log(data,\"secret\");\r\n    dispatch({ type: 'CREATE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const replyComment = (postid,comment,up_level_cid) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.createComment(postid,comment,up_level_cid);\r\n    console.log(data,\"secret\");\r\n    dispatch({ type: 'REPLY_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const upvoteComment = (comment_id,updown) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.upvoteComment(comment_id, updown);\r\n    console.log(data)\r\n    dispatch({ type: 'UPVOTE_COMMENT', payload: data });\r\n  } catch (error) {\r\n    console.log(\"error in upvote comments\");\r\n  }\r\n};\r\n\r\n// export const downvoteComment = (comment_id) => async (dispatch) => {\r\n//   try {\r\n//     const { data } = await api.upvoteComment(comment_id);\r\n\r\n//     dispatch({ type: 'DOWNVOTE_COMMENT', payload: data });\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\nexport const getThread = (comment_id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getThread(comment_id);\r\n    console.log(\"thread data\",data);\r\n    dispatch({ type: 'GET_THREAD', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getUser = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.getUser();\r\n    // console.log(\"thread data\",data);\r\n    dispatch({ type: 'GET_USER', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  try {\r\n    \r\n    const { data } = await api.addPost(formData);\r\n    console.log(\"thread data\",data);\r\n    dispatch({ type: 'ADD_POST', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.7c0ee393.png\";","\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n       \r\n      \r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(8),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  button: {\r\n    marginBottom: 10,\r\n  },\r\n  // button: {\r\n  //   '& > *': {\r\n  //     marginBottom: 10,\r\n  //     // margin: theme.spacing(1),\r\n  //   },\r\n  // },\r\n\r\n}));","import { CardMedia, TextField } from '@material-ui/core'\r\nimport React from 'react';\r\nimport  { useState, useEffect } from 'react';\r\nimport {  Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\n\r\nimport {addPost} from '../../actions/Posts'\r\n\r\nconst CreatePost = () => {\r\n\r\n    const [postData, setPostData] = useState({  Title: '', Caption: '', myFile:null});\r\n\r\n//   const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n//   useEffect(() => {\r\n//     if (post) setPostData(post);\r\n//   }, [post]);\r\n\r\n  const clear = () => {\r\n    setPostData({ Title: '', Caption: '', myFile:null} );\r\n    var reader = new FileReader();\r\n reader.onload = function()\r\n {\r\n  var output = document.getElementById('preview_image');\r\n  output.src ='' ;\r\n }\r\n setPosted(false);\r\n \r\n  };\r\n  const [posted,setPosted]= useState(false)\r\n  const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n\r\n     const formData = new FormData();\r\n\r\n    formData.append('Title', postData.Title );\r\n    formData.append('Caption',postData.Caption );\r\n    if(postData.myFile !== null ){\r\n        formData.append('myFile', postData.myFile);\r\n    }\r\n    dispatch(addPost(formData));\r\n    \r\n    clear();\r\n\r\n    setPosted(true);\r\n\r\n   \r\n  };\r\n  const handleImageUpload =(e) =>{\r\n    setPostData({...postData, myFile: e.target.files[0]});\r\n    var reader = new FileReader();\r\n reader.onload = function()\r\n {\r\n  var output = document.getElementById('preview_image');\r\n  output.src = reader.result;\r\n }\r\n reader.readAsDataURL(e.target.files[0]);\r\n\r\n  }\r\n\r\n\r\n    return (\r\n      \r\n      <Paper className={classes.paper}>\r\n        <h3>Create New Post</h3>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        \r\n        \r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.Title} onChange={(e) => setPostData({ ...postData, Title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Description\" fullWidth multiline rows={4} value={postData.Caption} onChange={(e) => setPostData({ ...postData, Caption: e.target.value })} />\r\n        <input type=\"file\" name=\"myFile\"  onChange={handleImageUpload}/>\r\n        <div></div>\r\n        <img id=\"preview_image\" height=\"200\" alt=\"\"></img>\r\n          \r\n        {/* <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, myFile: base64 })} /></div> */}\r\n        <Button className={classes.button} variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button className={classes.button} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n        {posted && <h1>Success</h1>}\r\n      </form>\r\n    </Paper>\r\n    )\r\n    \r\n}\r\n\r\nexport default CreatePost;\r\n","import React from 'react'\r\n\r\nfunction PleaseLogin() {\r\n    return (\r\n        <div>\r\n            <h1>Your are not logged in</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PleaseLogin\r\n","import React, {useEffect} from \"react\";\nimport './App.css';\n// import {Container, AppBar, Typography} from \"@material-ui/core\"\nimport {useDispatch} from \"react-redux\"\nimport {getPosts, getUser} from './actions/Posts';\n\nimport logo from './logo.png'\nimport CreatePost from \"./components/CreatePost/CreatePost\";\nimport Cookies from 'js-cookie'\nimport PleaseLogin from \"./components/PleaseLogin\";\n\nconst App = () => {\n\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // forgot to call\n    dispatch(getPosts());\n    dispatch(getUser());\n    console.log(\"Dispatching\");\n  }, [dispatch]);\n  console.log(\"w\",Cookies.get('access_control_token_cookie_skinder'))\n  return (\n    <>\n    <div className=\"app__header\">\n          <a href=\"https://skinder-5d70f.web.app/\"> <img className=\"app__headerImage\" src={logo} alt=\"Logo\"/></a>\n\n      </div>\n    <div className=\"app\">\n      \n      {Cookies.get('access_control_token_cookie_skinder') ? <CreatePost/> :<PleaseLogin/>}\n     \n    </div>\n    </>\n  )\n    \n    \n  \n}\n\nexport default App;\n","// reducer is function which accepts a state and an action\r\n\r\nconst reducer = (Posts=[], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_POST':\r\n            return [...Posts, action.payload];\r\n        case 'FETCH_ALL':\r\n            return action.payload ;\r\n        // case 'GET_POST_COMMENTS':\r\n        //     return action.payload;\r\n        default:\r\n            return Posts;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (Comments= [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_POST_COMMENTS':\r\n            return  action.payload ;\r\n        case 'CREATE':\r\n            return [...Comments, action.payload] ;\r\n        case 'UPVOTE_COMMENT':\r\n            return Comments ;\r\n        case 'DOWNVOTE_COMMENT':\r\n            return Comments;\r\n        // case 'GET_THREAD':\r\n        //     return action.payload;\r\n        default:\r\n            return Comments;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","const reducer = (Thread=[], action) => {\r\n    switch(action.type) {\r\n        \r\n        case 'GET_THREAD':\r\n            return action.payload;\r\n\r\n        case 'REPLY_COMMENT':\r\n            return Thread;\r\n        default:\r\n            return Thread;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","\r\n\r\nconst reducer = (User=[], action) => {\r\n    switch(action.type) {\r\n        case 'GET_USER':\r\n            return action.payload ;\r\n        // case 'GET_POST_COMMENTS':\r\n        //     return action.payload;\r\n        default:\r\n            return User;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","// Step 2\r\nimport {combineReducers} from \"redux\";\r\nimport Posts from \"./Posts\"\r\nimport Comments from \"./Comments\"\r\nimport Thread from \"./Thread\"\r\nimport User from \"./User\"\r\nexport const reducers = combineReducers ({\r\n    Posts :Posts,\r\n    Comments:Comments,\r\n    Thread:Thread,\r\n    User:User,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider } from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {reducers} from \"./reducers\"\n\n// STORE -->global state\n// to set up redux create a store\n\n//  Step 1 \nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n// ACTION INCREMENT\n\n// Reducer\n\n// Dispach dispach this action to reducer store gets update\n//donot forget to pass store props\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}